Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASO_FOR
    ENQUANTO
    FACA
    FLUTUANTE
    FUNCAO
    IMPRIMIR
    LER
    PARA
    RETORNA
    SAIR
    SE
    SENAO
    SENAO_SE
    TEXTO
    TINTEIRO
    abre_chave
    abre_colchete
    abre_parentese
    aspas
    aspas_simples
    caracter_invisivel
    comentario_uma_linha
    diferente
    divide_igual
    dividir
    dois_pontos
    duplo_igual
    e
    exatamente_igual
    fecha_chave
    fecha_colchete
    fecha_parentese
    flutuante
    ignore
    igual
    inteiro
    maior
    maior_igual
    mais
    mais_igual
    menor
    menor_igual
    menos
    menos_igual
    modulo
    negacao
    numero_errado
    ou
    ponto
    texto
    texto_errado
    variavel
    variavel_errada
    vezes
    vezes_igual
    virgula

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> IFSULDEMINAS ponto_virgula
Rule 4     statement -> INICIO ponto_virgula
Rule 5     statement -> COMPILADORES ponto_virgula
Rule 6     statement -> FIM ponto_virgula

Terminals, with rules where they appear

CASO_FOR             : 
COMPILADORES         : 5
ENQUANTO             : 
FACA                 : 
FIM                  : 6
FLUTUANTE            : 
FUNCAO               : 
IFSULDEMINAS         : 3
IMPRIMIR             : 
INICIO               : 4
LER                  : 
PARA                 : 
RETORNA              : 
SAIR                 : 
SE                   : 
SENAO                : 
SENAO_SE             : 
TEXTO                : 
TINTEIRO             : 
abre_chave           : 
abre_colchete        : 
abre_parentese       : 
aspas                : 
aspas_simples        : 
caracter_invisivel   : 
comentario_uma_linha : 
diferente            : 
divide_igual         : 
dividir              : 
dois_pontos          : 
duplo_igual          : 
e                    : 
error                : 
exatamente_igual     : 
fecha_chave          : 
fecha_colchete       : 
fecha_parentese      : 
flutuante            : 
ignore               : 
igual                : 
inteiro              : 
maior                : 
maior_igual          : 
mais                 : 
mais_igual           : 
menor                : 
menor_igual          : 
menos                : 
menos_igual          : 
modulo               : 
negacao              : 
numero_errado        : 
ou                   : 
ponto                : 
ponto_virgula        : 3 4 5 6
texto                : 
texto_errado         : 
variavel             : 
variavel_errada      : 
vezes                : 
vezes_igual          : 
virgula              : 

Nonterminals, with rules where they appear

statement            : 1 2
statements           : 1 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . IFSULDEMINAS ponto_virgula
    (4) statement -> . INICIO ponto_virgula
    (5) statement -> . COMPILADORES ponto_virgula
    (6) statement -> . FIM ponto_virgula

    IFSULDEMINAS    shift and go to state 3
    INICIO          shift and go to state 4
    COMPILADORES    shift and go to state 5
    FIM             shift and go to state 6

    statements                     shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . IFSULDEMINAS ponto_virgula
    (4) statement -> . INICIO ponto_virgula
    (5) statement -> . COMPILADORES ponto_virgula
    (6) statement -> . FIM ponto_virgula

    IFSULDEMINAS    shift and go to state 3
    INICIO          shift and go to state 4
    COMPILADORES    shift and go to state 5
    FIM             shift and go to state 6

    statement                      shift and go to state 7

state 2

    (2) statements -> statement .

    IFSULDEMINAS    reduce using rule 2 (statements -> statement .)
    INICIO          reduce using rule 2 (statements -> statement .)
    COMPILADORES    reduce using rule 2 (statements -> statement .)
    FIM             reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> IFSULDEMINAS . ponto_virgula

    ponto_virgula   shift and go to state 8


state 4

    (4) statement -> INICIO . ponto_virgula

    ponto_virgula   shift and go to state 9


state 5

    (5) statement -> COMPILADORES . ponto_virgula

    ponto_virgula   shift and go to state 10


state 6

    (6) statement -> FIM . ponto_virgula

    ponto_virgula   shift and go to state 11


state 7

    (1) statements -> statements statement .

    IFSULDEMINAS    reduce using rule 1 (statements -> statements statement .)
    INICIO          reduce using rule 1 (statements -> statements statement .)
    COMPILADORES    reduce using rule 1 (statements -> statements statement .)
    FIM             reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 8

    (3) statement -> IFSULDEMINAS ponto_virgula .

    IFSULDEMINAS    reduce using rule 3 (statement -> IFSULDEMINAS ponto_virgula .)
    INICIO          reduce using rule 3 (statement -> IFSULDEMINAS ponto_virgula .)
    COMPILADORES    reduce using rule 3 (statement -> IFSULDEMINAS ponto_virgula .)
    FIM             reduce using rule 3 (statement -> IFSULDEMINAS ponto_virgula .)
    $end            reduce using rule 3 (statement -> IFSULDEMINAS ponto_virgula .)


state 9

    (4) statement -> INICIO ponto_virgula .

    IFSULDEMINAS    reduce using rule 4 (statement -> INICIO ponto_virgula .)
    INICIO          reduce using rule 4 (statement -> INICIO ponto_virgula .)
    COMPILADORES    reduce using rule 4 (statement -> INICIO ponto_virgula .)
    FIM             reduce using rule 4 (statement -> INICIO ponto_virgula .)
    $end            reduce using rule 4 (statement -> INICIO ponto_virgula .)


state 10

    (5) statement -> COMPILADORES ponto_virgula .

    IFSULDEMINAS    reduce using rule 5 (statement -> COMPILADORES ponto_virgula .)
    INICIO          reduce using rule 5 (statement -> COMPILADORES ponto_virgula .)
    COMPILADORES    reduce using rule 5 (statement -> COMPILADORES ponto_virgula .)
    FIM             reduce using rule 5 (statement -> COMPILADORES ponto_virgula .)
    $end            reduce using rule 5 (statement -> COMPILADORES ponto_virgula .)


state 11

    (6) statement -> FIM ponto_virgula .

    IFSULDEMINAS    reduce using rule 6 (statement -> FIM ponto_virgula .)
    INICIO          reduce using rule 6 (statement -> FIM ponto_virgula .)
    COMPILADORES    reduce using rule 6 (statement -> FIM ponto_virgula .)
    FIM             reduce using rule 6 (statement -> FIM ponto_virgula .)
    $end            reduce using rule 6 (statement -> FIM ponto_virgula .)

